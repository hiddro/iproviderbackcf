/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Source code: https://github.com/jaxio/celerio/
 * Follow us on twitter: @jaxiosoft
 * This header can be customized in Celerio conf...
 * Template pack-angular:src/main/java/dto/EntitydeltaDTOService.java.e.vm
 */
package com.incloud.hcp.service.delta.impl;

import com.incloud.hcp.domain.Cotizacion;
import com.incloud.hcp.domain.Licitacion;
import com.incloud.hcp.domain.Moneda;
import com.incloud.hcp.domain.TasaCambio;
import com.incloud.hcp.repository.CotizacionRepository;
import com.incloud.hcp.repository.LicitacionRepository;
import com.incloud.hcp.repository.MonedaRepository;
import com.incloud.hcp.service.delta.TasaCambioDeltaService;
import com.incloud.hcp.service.impl.TasaCambioServiceImpl;
import com.incloud.hcp.service.support.PageRequestByExample;
import com.incloud.hcp.util.DateUtils;
import com.incloud.hcp.util.Utils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Example;
import org.springframework.data.domain.ExampleMatcher;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Optional;

/**
 * A simple DTO Facility for TasaCambio.
 */
@Service
@Transactional(propagation = Propagation.REQUIRED, rollbackFor = Exception.class)
public class TasaCambioDeltaServiceImpl extends TasaCambioServiceImpl implements TasaCambioDeltaService {

    @Autowired
    protected MonedaRepository monedaRepository;

    @Autowired
    protected LicitacionRepository licitacionRepository;

    @Autowired
    protected CotizacionRepository cotizacionRepository;

    /**************************/
    /* Metodos Personalizados */
    /**************************/

    public List<TasaCambio> findLicitacion(Integer idLicitacion) {
        List<TasaCambio> tasaCambioList = new ArrayList<>();
        Licitacion licitacion = this.licitacionRepository.getOne(idLicitacion);
        if (!Optional.ofNullable(licitacion).isPresent()) {
            return tasaCambioList;
        }
//        Moneda monedaBase = this.monedaRepository.getByCodigoMoneda("PEN");
        Moneda monedaLicitacion = licitacion.getMoneda(); // Moneda Destino

        List<Cotizacion> cotizacionList = this.cotizacionRepository.findByLicitacion(licitacion);
        Date fechaActual = DateUtils.obtenerFechaActual();

        if (cotizacionList != null && cotizacionList.size() > 0) {
            for(Cotizacion bean : cotizacionList) {
                Moneda monedaCotizacion = bean.getMoneda(); // Moneda Origen

                if (!monedaCotizacion.getCodigoMoneda().equals(monedaLicitacion.getCodigoMoneda())) {
                    TasaCambio tasaCambio = null;

                    if(monedaLicitacion.getCodigoMoneda().equalsIgnoreCase("PEN")) {
                        tasaCambio = this.tasaCambioRepository.
                                getByFechaTasaAndIdMonedaOrigenAndIdMonedaDestino( // aparentemente se envian invertidas la moneda origen y la moneda destino
                                        fechaActual, monedaLicitacion, monedaCotizacion
                                );
                    }
                    else if(monedaCotizacion.getCodigoMoneda().equalsIgnoreCase("PEN")){
                        tasaCambio = this.tasaCambioRepository.
                                getByFechaTasaAndIdMonedaOrigenAndIdMonedaDestino( // aparentemente se envian invertidas la moneda origen y la moneda destino
                                        fechaActual, monedaCotizacion, monedaLicitacion
                                );
                    }

                    if(tasaCambio != null && !tasaCambioList.contains(tasaCambio))
                        tasaCambioList.add(tasaCambio);
                }
            }
        }
        return tasaCambioList;

    }


    /**************************/
    /* Metodos Generados      */
    /**************************/

    protected Sort setFindAll(Sort sort) {
        return sort;
    }

    protected Sort setFind(TasaCambio req, ExampleMatcher matcher, Example<TasaCambio> example, Sort sort) {
        return sort;
    }

    protected void setFindPaginated(PageRequestByExample<TasaCambio> req, ExampleMatcher matcher, Example<TasaCambio> example) {
        return;
    }

    protected void setCreate(TasaCambio dto) {

    }

    protected void setSave(TasaCambio dto) {

    }

    protected void setDelete(Integer id) {

    }

    protected void setDeleteAll() {

    }

}