/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Source code: https://github.com/jaxio/celerio/
 * Follow us on twitter: @jaxiosoft
 * This header can be customized in Celerio conf...
 * Template pack-angular:src/main/java/domain/Entity.java.e.vm
 */
package com.incloud.hcp.domain;

import com.google.common.base.MoreObjects;
import com.incloud.hcp.domain._framework.BaseDomain;
import com.incloud.hcp.domain._framework.Identifiable;
import org.hibernate.validator.constraints.NotEmpty;

import javax.persistence.*;
import javax.validation.constraints.Digits;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.logging.Logger;

import static javax.persistence.GenerationType.SEQUENCE;

@Entity
@Table(name = "indicador")
public class Indicador extends BaseDomain implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(Indicador.class.getName());

    // Raw attributes
    private Integer id;
    private String codigoTipoValorIndicador;
    private BigDecimal valorMinimo;
    private BigDecimal valorMaximo;
    private BigDecimal valorIntermedio;
    private String descripcionIndicador;

    @Override
    public String entityClassName() {
        return Indicador.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Column(name = "id_indicador", precision = 10)
    @GeneratedValue(strategy = SEQUENCE, generator = "seq_indicador")
    @Id
    @SequenceGenerator(name = "seq_indicador", sequenceName = "seq_indicador", allocationSize = 1)
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public Indicador id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [codigoTipoValorIndicador] ------------------------

    @NotEmpty
    @Size(max = 3)
    @Column(name = "codigo_tipo_valor_indicador", nullable = false, length = 3)
    public String getCodigoTipoValorIndicador() {
        return codigoTipoValorIndicador;
    }

    public void setCodigoTipoValorIndicador(String codigoTipoValorIndicador) {
        this.codigoTipoValorIndicador = codigoTipoValorIndicador;
    }

    public Indicador codigoTipoValorIndicador(String codigoTipoValorIndicador) {
        setCodigoTipoValorIndicador(codigoTipoValorIndicador);
        return this;
    }
    // -- [valorMinimo] ------------------------

    @Digits(integer = 13, fraction = 2)
    @Column(name = "valor_minimo", precision = 15, scale = 2)
    public BigDecimal getValorMinimo() {
        return valorMinimo;
    }

    public void setValorMinimo(BigDecimal valorMinimo) {
        this.valorMinimo = valorMinimo;
    }

    public Indicador valorMinimo(BigDecimal valorMinimo) {
        setValorMinimo(valorMinimo);
        return this;
    }
    // -- [valorMaximo] ------------------------

    @Digits(integer = 13, fraction = 2)
    @Column(name = "valor_maximo", precision = 15, scale = 2)
    public BigDecimal getValorMaximo() {
        return valorMaximo;
    }

    public void setValorMaximo(BigDecimal valorMaximo) {
        this.valorMaximo = valorMaximo;
    }

    public Indicador valorMaximo(BigDecimal valorMaximo) {
        setValorMaximo(valorMaximo);
        return this;
    }
    // -- [valorIntermedio] ------------------------

    @Digits(integer = 13, fraction = 2)
    @Column(name = "valor_intermedio", precision = 15, scale = 2)
    public BigDecimal getValorIntermedio() {
        return valorIntermedio;
    }

    public void setValorIntermedio(BigDecimal valorIntermedio) {
        this.valorIntermedio = valorIntermedio;
    }

    public Indicador valorIntermedio(BigDecimal valorIntermedio) {
        setValorIntermedio(valorIntermedio);
        return this;
    }
    // -- [descripcionIndicador] ------------------------

    @NotEmpty
    @Size(max = 60)
    @Column(name = "descripcion_indicador", nullable = false, unique = true, length = 60)
    public String getDescripcionIndicador() {
        return descripcionIndicador;
    }

    public void setDescripcionIndicador(String descripcionIndicador) {
        this.descripcionIndicador = descripcionIndicador;
    }

    public Indicador descripcionIndicador(String descripcionIndicador) {
        setDescripcionIndicador(descripcionIndicador);
        return this;
    }

    /**
     * Apply the default values.
     */
    public Indicador withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Indicador && hashCode() == other.hashCode());
    }


    /**
     * Construct a readable string representation for this Indicador instance.
     * @see Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("codigoTipoValorIndicador", getCodigoTipoValorIndicador()) //
                .add("valorMinimo", getValorMinimo()) //
                .add("valorMaximo", getValorMaximo()) //
                .add("valorIntermedio", getValorIntermedio()) //
                .add("descripcionIndicador", getDescripcionIndicador()) //
                .toString();
    }
}